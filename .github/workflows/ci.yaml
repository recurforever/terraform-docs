name: ci

on:
  push:
    branches:
      - master
      - DV-859-automate-tf-docs
  pull_request:

env:
  GO_VERSION: "1.18.3"

jobs:
  build:
    runs-on: [self-hosted, shared]
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binary
        run: make build

  # test:
  #   runs-on: ubuntu-latest
  #   if: "!contains(github.event.head_commit.message, '[ci skip]')"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.GO_VERSION }}

  #     - name: Run tests
  #       run: make test

  # validate:
  #   runs-on: ubuntu-latest
  #   if: "!contains(github.event.head_commit.message, '[ci skip]')"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{ env.GO_VERSION }}

  #     - name: Verify dependencies
  #       run: make verify

  #     - name: Check formatting
  #       run: make goimports checkfmt

  #     - name: Run linters
  #       run: make golangci lint

  #     - name: Run Staticcheck
  #       run: make staticcheck

  #     - name: Check License headers
  #       run: |
  #         GO111MODULE=off go get github.com/google/addlicense

  #         addlicense -check $(find . -type f -name "*.go")
  #         addlicense -check $(find . -type f -name "*.sh")
  #         addlicense -check $(find . -type f -name "Dockerfile")

  #     - name: Check docs
  #       if: "!contains(github.ref, 'refs/heads/master')"
  #       run: make docs && test -z "$(git status --porcelain)" || exit 1

  # docker:
  #   runs-on: ubuntu-latest
  #   if: "!contains(github.event.head_commit.message, '[ci skip]')"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Login to Docker
  #       uses: docker/login-action@v1
  #       if: env.REGISTRY_USERNAME != ''
  #       with:
  #         registry: quay.io
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_PASSWORD }}

  #     - name: Build 'dev' Docker image
  #       if: "!contains(github.ref, 'refs/heads/master')"
  #       run: make docker
  #       env:
  #         DOCKER_TAG: ${{ github.sha }}

  #     - name: Build and push 'edge' Docker image
  #       if: env.REGISTRY_USERNAME != '' && contains(github.ref, 'refs/heads/master')
  #       run: make docker push
  #       env:
  #         DOCKER_TAG: edge

